# Claude Code Configuration for ITB-100 Thermal Battery Project

## Project Context
This is an open-source phase-change material (PCM) thermal energy storage system
called the ITB-100. It's a 16.7 kWh thermal battery designed for residential heating
applications including heat pump assistance, time-of-use rate arbitrage, and solar
thermal integration.

Project Status: Design phase - models complete, awaiting physical validation
License: MIT
Python Version: 3.12+

## Project Structure

### Directory Layout
```
/
├── README.md                    # Main project documentation
├── LICENSE                      # MIT License
├── requirements.txt             # Python dependencies
├── pyproject.toml              # Python project config
├── claude.ini                  # This file
├── docs/                       # All documentation
│   ├── BOM.md
│   ├── MODELS_README.md
│   ├── CONTRIBUTING.md
│   ├── GETTING_STARTED.md
│   ├── EXECUTIVE_SUMMARY_FINAL.md
│   ├── VALIDATION_TEST.md
│   └── [other docs]
├── models/                     # Python analysis models
│   ├── itb100_system_model.py
│   ├── heat_pump_assist_analysis.py
│   ├── itb100_market_analysis.py
│   └── thermal_vs_lithium_comparison.py
├── assets/                     # Images and visualizations
│   └── thermal_vs_lithium_comparison.png
└── output/                     # Generated by models (not in git)
    └── [PNG visualizations]
```

### Python Models (Research Grade, 7/10)
All models located in `models/` directory:
- itb100_system_model.py: Core thermal dynamics simulation (913 lines)
- heat_pump_assist_analysis.py: Economic analysis for heat pump assist (593 lines)
- itb100_market_analysis.py: Market sizing and competitive analysis (872 lines)
- thermal_vs_lithium_comparison.py: Cost comparison with batteries (492 lines)

### Key Documentation
All documentation in `docs/` directory:
- BOM.md: Complete bill of materials
- MODELS_README.md: How to run and interpret the Python models
- EXECUTIVE_SUMMARY_FINAL.md: Strategic assessment and validation strategy
- VALIDATION_TEST.md: Benchtop testing protocol
- GETTING_STARTED.md: Paths for different user types
- CODE_STATUS.md: Code quality assessment
- CONTRIBUTING.md: Contribution guidelines

### Dependencies
Core: numpy, matplotlib
Optional: jupyter, pandas

## Important Constraints & Context

### What's Validated
- Physics-based thermal models (SAT is proven material)
- Market opportunity (gas bans, TOU rates, heat pump adoption)
- Economics viable at scale ($4,500 target installed price)

### What's NOT Validated (Critical!)
- No physical prototype built yet
- Nucleation reliability unproven in this application
- Actual UA value and power output untested
- Cycle life and durability untested
- HDPE pouch thermal cycling survival unknown

### Key Design Parameters (for model modifications)
- PCM: Sodium Acetate Trihydate (SAT)
- Phase change temp: 58°C (136°F)
- Latent heat: 264 kJ/kg
- Total capacity: 16.7 kWh
- Target UA value: 111.7 W/K (calculated, unvalidated)
- Target cycles: 1,000+

### Known Issues & Limitations
- Models are location-hardcoded (Syracuse, NY) - needs parameterization
- No unit tests or uncertainty quantification
- Missing: BOM, assembly guide, CAD files
- Research-grade code quality (works but needs hardening)

## Coding Guidelines

### When modifying models:
- Preserve physics-based assumptions and justifications
- Document all assumption changes in comments
- Models output to ./output/ directory for visualizations
- Keep command-line argument support intact
- Add uncertainty ranges where possible

### Code style:
- Follow existing patterns (NumPy-style docstrings)
- Clear variable names that match physics notation where appropriate
- Comment complex thermal calculations
- Prefer readability over optimization (this is research code)

### Testing strategy:
- Models should be runnable via CLI with default parameters
- Check output visualizations in ./output/ directory
- Validate against known physics (e.g., energy conservation)
- Compare results to existing SAT literature data

## Open Source Preparation

### Still needed for GitHub publication:
1. ✅ Bill of Materials (BOM.md) - COMPLETE
2. Assembly instructions with photos/diagrams
3. Safety guidelines (working with 58°C fluids, electrical)
4. CAD files (heat exchanger plates, frame, full assembly)
5. Initial git commit and repo setup

### Target audiences:
- Researchers interested in thermal storage
- DIY builders (with realistic expectations about complexity)
- HVAC manufacturers exploring thermal storage products
- Climate tech community

## Common Tasks

### Running the models:
```bash
# From project root
python models/itb100_system_model.py
python models/heat_pump_assist_analysis.py
python models/itb100_market_analysis.py
python models/thermal_vs_lithium_comparison.py

# Or from models/ directory
cd models/
python itb100_system_model.py --output-dir ../output
```

### Installing dependencies:
```bash
pip install -r requirements.txt
```

### Outputs:
Models generate PNG visualizations in ./output/ directory (created automatically)

## Project Philosophy

This project is deliberately honest about its limitations. It's a well-researched
design concept that needs validation, not a finished product. The goal is to:
1. Enable low-cost community validation via benchtop testing
2. Reduce commercialization barriers through open design
3. Advance affordable thermal storage technology
4. Find collaborators for physical validation

When contributing or modifying, maintain this transparent, scientifically rigorous
approach. Don't oversell - call out assumptions and uncertainties.

## Contact & Collaboration

This project seeks:
- Builders to construct and test benchtop validation rigs
- Thermal engineers to review design assumptions
- Manufacturing partners interested in commercialization
- Researchers to contribute validation data

See docs/CONTRIBUTING.md for detailed contribution guidelines.
